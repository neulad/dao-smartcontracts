{
  "address": "0x919f8f10967583c8a34A2E7e07bBa5F6a9b181f3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftMarketplace",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cryptoDevsNFT",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yayVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nayVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum CryptoDevsDAO.Vote",
          "name": "vote",
          "type": "uint8"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x50755d0e1afa19bb40e383716c59b02c4a2cc05e222992a483b3a5be6d2f6942",
  "receipt": {
    "to": null,
    "from": "0x9B3f704349BDA68EaCc8d9D5498d1D2FEAf92a3c",
    "contractAddress": "0x919f8f10967583c8a34A2E7e07bBa5F6a9b181f3",
    "transactionIndex": 17,
    "gasUsed": "1456556",
    "logsBloom": "0x00000000000000000000000000000000000000000000010000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000c00000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000400000010000000000000000000000004000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x7776fe6410699494fa28e1a2163a2fc019a4ecc1e84a09806c8edf1e42a7f8f0",
    "transactionHash": "0x50755d0e1afa19bb40e383716c59b02c4a2cc05e222992a483b3a5be6d2f6942",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 3194252,
        "transactionHash": "0x50755d0e1afa19bb40e383716c59b02c4a2cc05e222992a483b3a5be6d2f6942",
        "address": "0x919f8f10967583c8a34A2E7e07bBa5F6a9b181f3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009b3f704349bda68eacc8d9d5498d1d2feaf92a3c"
        ],
        "data": "0x",
        "logIndex": 35,
        "blockHash": "0x7776fe6410699494fa28e1a2163a2fc019a4ecc1e84a09806c8edf1e42a7f8f0"
      }
    ],
    "blockNumber": 3194252,
    "cumulativeGasUsed": "2570141",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x06BA9e7E2434Fdc58ca077dB84437dA34D9f9400",
    "0xAd0D36Fcf871c07ED0D84309E7672F99106fd8A9"
  ],
  "numDeployments": 1,
  "solcInputHash": "13f27020404995071c068df3ffe3335d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftMarketplace\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cryptoDevsNFT\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftTokenId\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yayVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nayVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum CryptoDevsDAO.Vote\",\"name\":\"vote\",\"type\":\"uint8\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeProposal(uint256)\":{\"details\":\"executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded\",\"params\":{\"proposalIndex\":\"- the index of the proposal to execute in the proposals array\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CryptoDevsDAO.sol\":\"CryptoDevsDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CryptoDevsDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ICryptoDevsNFT.sol\\\";\\nimport \\\"./interfaces/IFakeNFTMarketplace.sol\\\";\\n\\n// Replace this line with the Interfaces\\ncontract CryptoDevsDAO is Ownable {\\n    // Create an enum named Vote containing possible options for a vote\\n    enum Vote {\\n        YAY, // YAY = 0\\n        NAY // NAY = 1\\n    }\\n\\n    struct Proposal {\\n        // nftTokenId - the tokenID of the NFT to purchase from FakeNFTMarketplace if the proposal passes\\n        uint256 nftTokenId;\\n        // deadline - the UNIX timestamp until which this proposal is active. Proposal can be executed after the deadline has been exceeded.\\n        uint256 deadline;\\n        // yayVotes - number of yay votes for this proposal\\n        uint256 yayVotes;\\n        // nayVotes - number of nay votes for this proposal\\n        uint256 nayVotes;\\n        // executed - whether or not this proposal has been executed yet. Cannot be executed before the deadline has been exceeded.\\n        bool executed;\\n        // voters - a mapping of CryptoDevsNFT tokenIDs to booleans indicating whether that NFT has already been used to cast a vote or not\\n        mapping(uint256 => bool) voters;\\n    }\\n\\n    // Create a mapping of ID to Proposal\\n    mapping(uint256 => Proposal) public proposals;\\n    // Number of proposals that have been created\\n    uint256 public numProposals;\\n\\n    IFakeNFTMarketplace nftMarketplace;\\n    ICryptoDevsNFT cryptoDevsNFT;\\n\\n    // Create a modifier which only allows a function to be\\n    // called by someone who owns at least 1 CryptoDevsNFT\\n    modifier nftHolderOnly() {\\n        require(cryptoDevsNFT.balanceOf(msg.sender) > 0, \\\"NOT_A_DAO_MEMBER\\\");\\n        _;\\n    }\\n\\n    // Create a modifier which only allows a function to be\\n    // called if the given proposals' deadline HAS been exceeded\\n    // and if the proposal has not yet been executed\\n    modifier inactiveProposalOnly(uint256 proposalIndex) {\\n        require(\\n            proposals[proposalIndex].deadline <= block.timestamp,\\n            \\\"DEADLINE_NOT_EXCEEDED\\\"\\n        );\\n        require(\\n            proposals[proposalIndex].executed == false,\\n            \\\"PROPOSAL_ALREADY_EXECUTED\\\"\\n        );\\n        _;\\n    }\\n\\n    // Create a modifier which only allows a function to be\\n    // called if the given proposal's deadline has not been exceeded yet\\n    modifier activeProposalOnly(uint256 proposalIndex) {\\n        require(\\n            proposals[proposalIndex].deadline > block.timestamp,\\n            \\\"DEADLINE_EXCEEDED\\\"\\n        );\\n        _;\\n    }\\n\\n    // Create a payable constructor which initializes the contract\\n    // instances for FakeNFTMarketplace and CryptoDevsNFT\\n    // The payable allows this constructor to accept an ETH deposit when it is being deployed\\n    constructor(address _nftMarketplace, address _cryptoDevsNFT) payable {\\n        nftMarketplace = IFakeNFTMarketplace(_nftMarketplace);\\n        cryptoDevsNFT = ICryptoDevsNFT(_cryptoDevsNFT);\\n    }\\n\\n    // The following two functions allow the contract to accept ETH deposits\\n    // directly from a wallet without calling a function\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    function createProposal(\\n        uint256 _nftTokenId\\n    ) external nftHolderOnly returns (uint256) {\\n        require(nftMarketplace.available(_nftTokenId), \\\"NFT_NOT_FOR_SALE\\\");\\n        Proposal storage proposal = proposals[numProposals];\\n        proposal.nftTokenId = _nftTokenId;\\n        // Set the proposal's voting deadline to be (current time + 5 minutes)\\n        proposal.deadline = block.timestamp + 5 minutes;\\n\\n        numProposals++;\\n\\n        return numProposals - 1;\\n    }\\n\\n    function voteOnProposal(\\n        uint256 proposalIndex,\\n        Vote vote\\n    ) external nftHolderOnly activeProposalOnly(proposalIndex) {\\n        Proposal storage proposal = proposals[proposalIndex];\\n\\n        uint256 voterNFTBalance = cryptoDevsNFT.balanceOf(msg.sender);\\n        uint256 numVotes = 0;\\n\\n        // Calculate how many NFTs are owned by the voter\\n        // that haven't already been used for voting on this proposal\\n        for (uint256 i = 0; i < voterNFTBalance; i++) {\\n            uint256 tokenId = cryptoDevsNFT.tokenOfOwnerByIndex(msg.sender, i);\\n            if (proposal.voters[tokenId] == false) {\\n                numVotes++;\\n                proposal.voters[tokenId] = true;\\n            }\\n        }\\n        require(numVotes > 0, \\\"ALREADY_VOTED\\\");\\n\\n        if (vote == Vote.YAY) {\\n            proposal.yayVotes += numVotes;\\n        } else {\\n            proposal.nayVotes += numVotes;\\n        }\\n    }\\n\\n    /// @dev executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded\\n    /// @param proposalIndex - the index of the proposal to execute in the proposals array\\n    function executeProposal(\\n        uint256 proposalIndex\\n    ) external nftHolderOnly inactiveProposalOnly(proposalIndex) {\\n        Proposal storage proposal = proposals[proposalIndex];\\n\\n        // If the proposal has more YAY votes than NAY votes\\n        // purchase the NFT from the FakeNFTMarketplace\\n        if (proposal.yayVotes > proposal.nayVotes) {\\n            uint256 nftPrice = nftMarketplace.getPrice();\\n            require(address(this).balance >= nftPrice, \\\"NOT_ENOUGH_FUNDS\\\");\\n            nftMarketplace.purchase{value: nftPrice}(proposal.nftTokenId);\\n        }\\n        proposal.executed = true;\\n    }\\n\\n    function withdrawEther() external onlyOwner {\\n        uint256 amount = address(this).balance;\\n        require(amount > 0, \\\"Nothing to withdraw, contract balance empty\\\");\\n        (bool sent, ) = payable(owner()).call{value: amount}(\\\"\\\");\\n        require(sent, \\\"FAILED_TO_WITHDRAW_ETHER\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x516dedc3febf53d515a05585bd483c079c2c6bba7a6e7e4104a581010d0b8f08\",\"license\":\"MIT\"},\"contracts/interfaces/ICryptoDevsNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ICryptoDevsNFT {\\n    /// @dev balanceOf returns the number of NFTs owned by the given address\\n    /// @param owner - address to fetch number of NFTs for\\n    /// @return Returns the number of NFTs owned\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    /// @dev tokenOfOwnerByIndex returns a tokenID at given index for owner\\n    /// @param owner - address to fetch the NFT TokenID for\\n    /// @param index - index of NFT in owned tokens array to fetch\\n    /// @return Returns the TokenID of the NFT\\n    function tokenOfOwnerByIndex(\\n        address owner,\\n        uint256 index\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xfaf8c718f71ed20b89ea278a2d21f4c0cf39decf0ddb71c082e72ef39537c87e\",\"license\":\"MIT\"},\"contracts/interfaces/IFakeNFTMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface IFakeNFTMarketplace {\\n    /// @dev getPrice() returns the price of an NFT from the FakeNFTMarketplace\\n    /// @return Returns the price in Wei for an NFT\\n    function getPrice() external view returns (uint256);\\n\\n    /// @dev available() returns whether or not the given _tokenId has already been purchased\\n    /// @return Returns a boolean value - true if available, false if not\\n    function available(uint256 _tokenId) external view returns (bool);\\n\\n    /// @dev purchase() purchases an NFT from the FakeNFTMarketplace\\n    /// @param _tokenId - the fake NFT tokenID to purchase\\n    function purchase(uint256 _tokenId) external payable;\\n}\\n\",\"keccak256\":\"0x4f77b53721d089d14dad90e9692a4ab46df6bf340fcc63729840c5b48c23834c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260405162001a7a38038062001a7a833981810160405281019062000029919062000209565b620000496200003d620000d360201b60201c565b620000db60201b60201c565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000250565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d182620001a4565b9050919050565b620001e381620001c4565b8114620001ef57600080fd5b50565b6000815190506200020381620001d8565b92915050565b600080604083850312156200022357620002226200019f565b5b60006200023385828601620001f2565b92505060206200024685828601620001f2565b9150509250929050565b61181a80620002606000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610eec565b610210565b6040516100cb959493929190610f43565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610eec565b610253565b005b34801561010957600080fd5b506101126105aa565b60405161011f9190610f96565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610eec565b6105b0565b60405161015c9190610f96565b60405180910390f35b34801561017157600080fd5b5061017a6107d1565b005b34801561018857600080fd5b506101916107e5565b005b34801561019f57600080fd5b506101a86108ec565b6040516101b59190610ff2565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611032565b610915565b005b3480156101f357600080fd5b5061020e6004803603810190610209919061109e565b610ce4565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190610ff2565b602060405180830381865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f191906110e0565b11610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061116a565b60405180910390fd5b80426001600083815260200190815260200160002060010154111561038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906111d6565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff161515146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90611242565b60405180910390fd5b6000600160008481526020019081526020016000209050806003015481600201541115610588576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af91906110e0565b9050804710156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb906112ae565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b81526004016105549190610f96565b6000604051808303818588803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161060e9190610ff2565b602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906110e0565b1161068f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106869061116a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b81526004016106ea9190610f96565b602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b91906112fa565b61076a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076190611373565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c4261079a91906113c2565b8160010181905550600260008154809291906107b5906113f6565b919050555060016002546107c9919061143e565b915050919050565b6107d9610d67565b6107e36000610de5565b565b6107ed610d67565b600047905060008111610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c906114e4565b60405180910390fd5b600061083f6108ec565b73ffffffffffffffffffffffffffffffffffffffff168260405161086290611535565b60006040518083038185875af1925050503d806000811461089f576040519150601f19603f3d011682016040523d82523d6000602084013e6108a4565b606091505b50509050806108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611596565b60405180910390fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109729190610ff2565b602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b391906110e0565b116109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea9061116a565b60405180910390fd5b8142600160008381526020019081526020016000206001015411610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611602565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ac09190610ff2565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906110e0565b90506000805b82811015610c30576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610b6e929190611622565b602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf91906110e0565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff16151503610c1c578280610bea906113f6565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610c28906113f6565b915050610b07565b5060008111610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b90611697565b60405180910390fd5b60006001811115610c8857610c876116b7565b5b856001811115610c9b57610c9a6116b7565b5b03610cc05780836002016000828254610cb491906113c2565b92505081905550610cdc565b80836003016000828254610cd491906113c2565b925050819055505b505050505050565b610cec610d67565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611758565b60405180910390fd5b610d6481610de5565b50565b610d6f610ea9565b73ffffffffffffffffffffffffffffffffffffffff16610d8d6108ec565b73ffffffffffffffffffffffffffffffffffffffff1614610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda906117c4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610ec981610eb6565b8114610ed457600080fd5b50565b600081359050610ee681610ec0565b92915050565b600060208284031215610f0257610f01610eb1565b5b6000610f1084828501610ed7565b91505092915050565b610f2281610eb6565b82525050565b60008115159050919050565b610f3d81610f28565b82525050565b600060a082019050610f586000830188610f19565b610f656020830187610f19565b610f726040830186610f19565b610f7f6060830185610f19565b610f8c6080830184610f34565b9695505050505050565b6000602082019050610fab6000830184610f19565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fdc82610fb1565b9050919050565b610fec81610fd1565b82525050565b60006020820190506110076000830184610fe3565b92915050565b6002811061101a57600080fd5b50565b60008135905061102c8161100d565b92915050565b6000806040838503121561104957611048610eb1565b5b600061105785828601610ed7565b92505060206110688582860161101d565b9150509250929050565b61107b81610fd1565b811461108657600080fd5b50565b60008135905061109881611072565b92915050565b6000602082840312156110b4576110b3610eb1565b5b60006110c284828501611089565b91505092915050565b6000815190506110da81610ec0565b92915050565b6000602082840312156110f6576110f5610eb1565b5b6000611104848285016110cb565b91505092915050565b600082825260208201905092915050565b7f4e4f545f415f44414f5f4d454d42455200000000000000000000000000000000600082015250565b600061115460108361110d565b915061115f8261111e565b602082019050919050565b6000602082019050818103600083015261118381611147565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b60006111c060158361110d565b91506111cb8261118a565b602082019050919050565b600060208201905081810360008301526111ef816111b3565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b600061122c60198361110d565b9150611237826111f6565b602082019050919050565b6000602082019050818103600083015261125b8161121f565b9050919050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b600061129860108361110d565b91506112a382611262565b602082019050919050565b600060208201905081810360008301526112c78161128b565b9050919050565b6112d781610f28565b81146112e257600080fd5b50565b6000815190506112f4816112ce565b92915050565b6000602082840312156113105761130f610eb1565b5b600061131e848285016112e5565b91505092915050565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b600061135d60108361110d565b915061136882611327565b602082019050919050565b6000602082019050818103600083015261138c81611350565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113cd82610eb6565b91506113d883610eb6565b92508282019050808211156113f0576113ef611393565b5b92915050565b600061140182610eb6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361143357611432611393565b5b600182019050919050565b600061144982610eb6565b915061145483610eb6565b925082820390508181111561146c5761146b611393565b5b92915050565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b60006114ce602b8361110d565b91506114d982611472565b604082019050919050565b600060208201905081810360008301526114fd816114c1565b9050919050565b600081905092915050565b50565b600061151f600083611504565b915061152a8261150f565b600082019050919050565b600061154082611512565b9150819050919050565b7f4641494c45445f544f5f57495448445241575f45544845520000000000000000600082015250565b600061158060188361110d565b915061158b8261154a565b602082019050919050565b600060208201905081810360008301526115af81611573565b9050919050565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b60006115ec60118361110d565b91506115f7826115b6565b602082019050919050565b6000602082019050818103600083015261161b816115df565b9050919050565b60006040820190506116376000830185610fe3565b6116446020830184610f19565b9392505050565b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b6000611681600d8361110d565b915061168c8261164b565b602082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061174260268361110d565b915061174d826116e6565b604082019050919050565b6000602082019050818103600083015261177181611735565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117ae60208361110d565b91506117b982611778565b602082019050919050565b600060208201905081810360008301526117dd816117a1565b905091905056fea2646970667358221220a07a94d5d3ff8249dbec91748e317ec1a3832f525b1f8bea934a3caa615e300164736f6c63430008100033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610eec565b610210565b6040516100cb959493929190610f43565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610eec565b610253565b005b34801561010957600080fd5b506101126105aa565b60405161011f9190610f96565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610eec565b6105b0565b60405161015c9190610f96565b60405180910390f35b34801561017157600080fd5b5061017a6107d1565b005b34801561018857600080fd5b506101916107e5565b005b34801561019f57600080fd5b506101a86108ec565b6040516101b59190610ff2565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611032565b610915565b005b3480156101f357600080fd5b5061020e6004803603810190610209919061109e565b610ce4565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190610ff2565b602060405180830381865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f191906110e0565b11610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061116a565b60405180910390fd5b80426001600083815260200190815260200160002060010154111561038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906111d6565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff161515146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90611242565b60405180910390fd5b6000600160008481526020019081526020016000209050806003015481600201541115610588576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af91906110e0565b9050804710156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb906112ae565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b81526004016105549190610f96565b6000604051808303818588803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161060e9190610ff2565b602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906110e0565b1161068f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106869061116a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b81526004016106ea9190610f96565b602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b91906112fa565b61076a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076190611373565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c4261079a91906113c2565b8160010181905550600260008154809291906107b5906113f6565b919050555060016002546107c9919061143e565b915050919050565b6107d9610d67565b6107e36000610de5565b565b6107ed610d67565b600047905060008111610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c906114e4565b60405180910390fd5b600061083f6108ec565b73ffffffffffffffffffffffffffffffffffffffff168260405161086290611535565b60006040518083038185875af1925050503d806000811461089f576040519150601f19603f3d011682016040523d82523d6000602084013e6108a4565b606091505b50509050806108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611596565b60405180910390fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109729190610ff2565b602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b391906110e0565b116109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea9061116a565b60405180910390fd5b8142600160008381526020019081526020016000206001015411610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611602565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ac09190610ff2565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906110e0565b90506000805b82811015610c30576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610b6e929190611622565b602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf91906110e0565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff16151503610c1c578280610bea906113f6565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610c28906113f6565b915050610b07565b5060008111610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b90611697565b60405180910390fd5b60006001811115610c8857610c876116b7565b5b856001811115610c9b57610c9a6116b7565b5b03610cc05780836002016000828254610cb491906113c2565b92505081905550610cdc565b80836003016000828254610cd491906113c2565b925050819055505b505050505050565b610cec610d67565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611758565b60405180910390fd5b610d6481610de5565b50565b610d6f610ea9565b73ffffffffffffffffffffffffffffffffffffffff16610d8d6108ec565b73ffffffffffffffffffffffffffffffffffffffff1614610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda906117c4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610ec981610eb6565b8114610ed457600080fd5b50565b600081359050610ee681610ec0565b92915050565b600060208284031215610f0257610f01610eb1565b5b6000610f1084828501610ed7565b91505092915050565b610f2281610eb6565b82525050565b60008115159050919050565b610f3d81610f28565b82525050565b600060a082019050610f586000830188610f19565b610f656020830187610f19565b610f726040830186610f19565b610f7f6060830185610f19565b610f8c6080830184610f34565b9695505050505050565b6000602082019050610fab6000830184610f19565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fdc82610fb1565b9050919050565b610fec81610fd1565b82525050565b60006020820190506110076000830184610fe3565b92915050565b6002811061101a57600080fd5b50565b60008135905061102c8161100d565b92915050565b6000806040838503121561104957611048610eb1565b5b600061105785828601610ed7565b92505060206110688582860161101d565b9150509250929050565b61107b81610fd1565b811461108657600080fd5b50565b60008135905061109881611072565b92915050565b6000602082840312156110b4576110b3610eb1565b5b60006110c284828501611089565b91505092915050565b6000815190506110da81610ec0565b92915050565b6000602082840312156110f6576110f5610eb1565b5b6000611104848285016110cb565b91505092915050565b600082825260208201905092915050565b7f4e4f545f415f44414f5f4d454d42455200000000000000000000000000000000600082015250565b600061115460108361110d565b915061115f8261111e565b602082019050919050565b6000602082019050818103600083015261118381611147565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b60006111c060158361110d565b91506111cb8261118a565b602082019050919050565b600060208201905081810360008301526111ef816111b3565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b600061122c60198361110d565b9150611237826111f6565b602082019050919050565b6000602082019050818103600083015261125b8161121f565b9050919050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b600061129860108361110d565b91506112a382611262565b602082019050919050565b600060208201905081810360008301526112c78161128b565b9050919050565b6112d781610f28565b81146112e257600080fd5b50565b6000815190506112f4816112ce565b92915050565b6000602082840312156113105761130f610eb1565b5b600061131e848285016112e5565b91505092915050565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b600061135d60108361110d565b915061136882611327565b602082019050919050565b6000602082019050818103600083015261138c81611350565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113cd82610eb6565b91506113d883610eb6565b92508282019050808211156113f0576113ef611393565b5b92915050565b600061140182610eb6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361143357611432611393565b5b600182019050919050565b600061144982610eb6565b915061145483610eb6565b925082820390508181111561146c5761146b611393565b5b92915050565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b60006114ce602b8361110d565b91506114d982611472565b604082019050919050565b600060208201905081810360008301526114fd816114c1565b9050919050565b600081905092915050565b50565b600061151f600083611504565b915061152a8261150f565b600082019050919050565b600061154082611512565b9150819050919050565b7f4641494c45445f544f5f57495448445241575f45544845520000000000000000600082015250565b600061158060188361110d565b915061158b8261154a565b602082019050919050565b600060208201905081810360008301526115af81611573565b9050919050565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b60006115ec60118361110d565b91506115f7826115b6565b602082019050919050565b6000602082019050818103600083015261161b816115df565b9050919050565b60006040820190506116376000830185610fe3565b6116446020830184610f19565b9392505050565b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b6000611681600d8361110d565b915061168c8261164b565b602082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061174260268361110d565b915061174d826116e6565b604082019050919050565b6000602082019050818103600083015261177181611735565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117ae60208361110d565b91506117b982611778565b602082019050919050565b600060208201905081810360008301526117dd816117a1565b905091905056fea2646970667358221220a07a94d5d3ff8249dbec91748e317ec1a3832f525b1f8bea934a3caa615e300164736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeProposal(uint256)": {
        "details": "executeProposal allows any CryptoDevsNFT holder to execute a proposal after it's deadline has been exceeded",
        "params": {
          "proposalIndex": "- the index of the proposal to execute in the proposals array"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 164,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Proposal)159_storage)"
      },
      {
        "astId": 166,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "numProposals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 169,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "nftMarketplace",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IFakeNFTMarketplace)547"
      },
      {
        "astId": 172,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "cryptoDevsNFT",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ICryptoDevsNFT)524"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICryptoDevsNFT)524": {
        "encoding": "inplace",
        "label": "contract ICryptoDevsNFT",
        "numberOfBytes": "20"
      },
      "t_contract(IFakeNFTMarketplace)547": {
        "encoding": "inplace",
        "label": "contract IFakeNFTMarketplace",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)159_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CryptoDevsDAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)159_storage"
      },
      "t_struct(Proposal)159_storage": {
        "encoding": "inplace",
        "label": "struct CryptoDevsDAO.Proposal",
        "members": [
          {
            "astId": 146,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "nftTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 148,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "deadline",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 150,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "yayVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 152,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "nayVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "executed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 158,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "voters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}